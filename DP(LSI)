
#include <stdio.h>
#include <algorithm>

int search( const int* C,int k,int e){
    int l=1,h=e;
    while(l<=h){
        int m=l+(h-l)/2;
       if(k>C[m]){
            l=m+1;
       }
       else if (k==C[m]){
           return m;
       }
       else{
            h=m-1;
       }
    }
    return l;
}

int Lis(int A[],int n){
int C[n];
int e=1;
C[e]=A[0];
for(int i=1;i<n;i++){
    if(A[i]>C[e]){
        C[++e]=A[i];
    } else if(A[i]==C[e]){
        continue;
    }
    else{
//        int pos= static_cast<int>(std::lower_bound(C + 1, C + e + 1, A[i]) - C);
        int pos = search(C,A[i],e);
        C[pos]=A[i];
    }
}
    return e;
}

int main() {
    int m, n,i,j;
    scanf("%d",&m);
    int B[m];
    for(i=0;i<m;i++){
        scanf("%d",&n);
        int A[n];
        for(j=0;j<n;j++){
            scanf("%d",&A[j]);
        }
        B[i]=Lis(A,n);
    }
    for(int u=0;u<m;u++){
        printf("%d\n",B[u]);
    }

    return 0;
}
